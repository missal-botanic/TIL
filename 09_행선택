df.loc[,'03'] # 03 기준으로 특정 조건을 넣겠다.


### 1. 특정 행 선택
```python
import pandas as pd

data = {'A': [1, 2, 3], 'B': [4, 5, 6]}
df = pd.DataFrame(data)

# 인덱스 1에 해당하는 행 선택
row = df.loc[1]
print(row)
```
**출력:**
```
A    2
B    5
Name: 1, dtype: int64
```

### 2. 조건에 맞는 행 선택
```python
# A열의 값이 2인 행 선택
filtered_rows = df.loc[df['A'] == 2]
print(filtered_rows)
```
**출력:**
```
   A  B
1  2  5
```

### 3. 특정 열 선택
```python
# A열 선택
column_A = df.loc[:, 'A']
print(column_A)
```
**출력:**
```
0    1
1    2
2    3
Name: A, dtype: int64
```

### 4. 조건을 만족하는 행의 특정 열 선택
```python
# A열의 값이 2인 행에서 B열 선택
filtered_value = df.loc[df['A'] == 2, 'B']
print(filtered_value)
```
**출력:**
```
1    5
Name: B, dtype: int64
```

### 5. 여러 조건 사용
```python
# A열의 값이 1이고, B열의 값이 4인 행 선택
filtered_rows = df.loc[(df['A'] == 1) & (df['B'] == 4)]
print(filtered_rows)
```
**출력:**
```
   A  B
0  1  4
```

### 6. 행 수정
```python
# A열의 값이 2인 행의 B열 값을 10으로 수정
df.loc[df['A'] == 2, 'B'] = 10
print(df)
```
**출력:**
```
   A  B
0  1  4
1  2 10
2  3  6
```

### 7. 행 추가
```python
# 새로운 행 추가
new_row = pd.Series({'A': 4, 'B': 7})
df.loc[len(df)] = new_row
print(df)
```
**출력:**
```
   A  B
0  1  4
1  2 10
2  3  6
3  4  7
```
