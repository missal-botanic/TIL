import torch
from transformers import LlamaForCausalLM, LlamaTokenizer
from transformers import Trainer, TrainingArguments
from datasets import load_dataset

# 모델과 토크나이저 로드
model_name = "meta-llama/Llama-2-7b"  # 사용할 LLaMA 모델 이름
tokenizer = LlamaTokenizer.from_pretrained(model_name)
model = LlamaForCausalLM.from_pretrained(model_name)

# 데이터셋 로드 (예: JSON 파일, CSV 파일 등)
dataset = load_dataset('json', data_files='path/to/your/dataset.json')

# 데이터 전처리
def preprocess_function(examples):
    return tokenizer(examples['text'], truncation=True)

tokenized_datasets = dataset.map(preprocess_function, batched=True)

# 훈련 인수 설정
training_args = TrainingArguments(
    output_dir="./results",
    evaluation_strategy="epoch",
    learning_rate=2e-5,
    per_device_train_batch_size=4,
    num_train_epochs=3,
    weight_decay=0.01,
)

# Trainer 초기화
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_datasets['train'],
    eval_dataset=tokenized_datasets['validation'],
)

# 모델 훈련
trainer.train()

# 모델 저장
trainer.save_model("./fine-tuned-llama")
